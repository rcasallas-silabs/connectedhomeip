<?xml version="1.0"?>
<!--
Copyright (c) 2021 Project CHIP Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<configurator>
  <domain name="CHIP" />

  <struct name="MembershipStruct" isFabricScoped="true">
    <cluster code="0x0064"/>
    <item fieldId="0" name="GroupId" type="group_id"/>
    <item fieldId="1" name="Endpoints" type="endpoint_no" array="true"/>
    <item fieldId="2" name="KeyId" type="int32u"/>
  </struct>

  <cluster>
    <domain>General</domain>
    <name>Groupcast</name>
    <code>0x0064</code>
    <define>GROUPCAST_CLUSTER</define>
    <description>The Groupcast Cluster.</description>

    <features>
      <feature bit="0" code="LN" name="Listener" summary="Supports joining a multicast group of nodes as a listener.">
        <optionalConform/>
      </feature>
      <feature bit="1" code="SD" name="Sender" summary="Supports sending multicast message to a targeted group of nodes.">
        <optionalConform/>
      </feature>
    </features>

    <attribute side="server" code="0x0000" name="Membership" define="GROUPCAST_MEMBERSHIP" type="array" length="254" entryType="MembershipStruct" writable="false" optional="false">
      <access op="read" privilege="view"/>
      <mandatoryConform/>
    </attribute>

    <attribute side="server" code="0x0001" name="MaxMembershipCount" define="GROUPCAST_MEMBERSHIP_COUNT" type="int8u" writable="false" optional="false">
      <access op="read" privilege="view"/>
      <mandatoryConform/>
    </attribute>

    <command source="client" code="0x00" name="JoinGroup" isFabricScoped="true" optional="false" cli="zcl Groupcast JoinGroup">
      <description>Instructs the server to join a multicast group.</description>
      <arg name="GroupId" type="group_id"/>
      <arg name="Endpoints" type="endpoint_no" array="true" minLength="1"/>
      <arg name="Key" type="octet_string" length="16"/>
      <arg name="KeyId" type="int32u"/>
      <arg name="GracePeriod" type="epoch_s"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x01" name="LeaveGroup" isFabricScoped="true" optional="false" cli="zcl Groupcast LeaveGroup">
      <description>Request that the server withdraws specific endpoints from a specific group.</description>
      <arg name="GroupId" type="group_id"/>
      <arg name="Endpoints" type="endpoint_no" array="true" minLength="1" />
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="server" code="0x02" name="LeaveGroupResponse" optional="false" disableDefaultResponse="true">
      <description>Response to JoinGroup</description>
      <arg name="GroupId" type="group_id"/>
      <arg name="Endpoints" type="endpoint_no" array="true"/>
      <arg name="ListTooLarge" type="bool" default="false"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x03" name="UpdateGroupKey" isFabricScoped="true" optional="false" cli="zcl Groupcast UpdateGroupKey">
      <description>Update the group operational key for an existing group ID that the server is a member of.</description>
      <arg name="GroupId" type="group_id"/>
      <arg name="Key" type="octet_string" length="16"/>
      <arg name="KeyId" type="int32u"/>
      <arg name="GracePeriod" type="epoch_s"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

    <command source="client" code="0x04" name="ExpireGracePeriod" isFabricScoped="true" optional="false" cli="zcl Groupcast ExpireGracePeriod">
      <description>Allows a fabric maintainer to update the operational key for an existing group.</description>
      <arg name="GroupId" type="group_id"/>
      <access op="invoke" privilege="administer"/>
      <mandatoryConform/>
    </command>

  </cluster>

</configurator>
