# Copyright (c) 2021 Project CHIP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/pigweed.gni")
import("${chip_root}/config/efr32/lib/pw_rpc/pw_rpc.gni")
import("${chip_root}/src/platform/silabs/efr32/args.gni")

silabs_sdk_target = get_label_info(":sdk", "label_no_toolchain")

chip_enable_pw_rpc = true
chip_build_tests = true
chip_link_tests = true
chip_enable_openthread = true
chip_openthread_ftd = false  # use mtd as it is smaller.

openthread_external_platform =
    "${chip_root}/third_party/openthread/platforms/efr32:libopenthread-efr32"

pw_rpc_CONFIG = "$dir_pw_rpc:disable_global_mutex"

pw_assert_BACKEND = "${chip_root}/src/pw_backends/assert"
pw_log_BACKEND = "${chip_root}/src/pw_backends/log"

pw_unit_test_BACKEND = "$dir_pw_unit_test:light"

#================================================================================
#================================================================================

dir_pw_third_party_freertos =
    "${silabs_sdk_build_root}/simplicity_sdk/util/third_party/freertos/kernel"
pw_third_party_freertos_CONFIG = "//:freertos_config"
pw_third_party_freertos_PORT = "$dir_pw_third_party/freertos:arm_cm33"

# set pw chrono backends to use FreeRTOS.
pw_chrono_SYSTEM_CLOCK_BACKEND = "$dir_pw_chrono_freertos:system_clock"
pw_chrono_SYSTEM_TIMER_BACKEND = "$dir_pw_chrono_freertos:system_timer"

# Set pw sync backends to use FreeRTOS.
pw_sync_BINARY_SEMAPHORE_BACKEND = "$dir_pw_sync_freertos:binary_semaphore"
pw_sync_THREAD_NOTIFICATION_BACKEND =
    "$dir_pw_sync_freertos:thread_notification"
pw_sync_TIMED_THREAD_NOTIFICATION_BACKEND =
    "$dir_pw_sync_freertos:timed_thread_notification"
pw_sync_MUTEX_BACKEND = "$dir_pw_sync_freertos:mutex"
pw_sync_TIMED_MUTEX_BACKEND = "$dir_pw_sync_freertos:timed_mutex"
pw_sync_INTERRUPT_SPIN_LOCK_BACKEND =
    "$dir_pw_sync_freertos:interrupt_spin_lock"

#set pw thread backends to use FreeRTOS.
pw_thread_ID_BACKEND = "$dir_pw_thread_freertos:id"
pw_thread_SLEEP_BACKEND = "$dir_pw_thread_freertos:sleep"
pw_thread_THREAD_BACKEND = "$dir_pw_thread_freertos:thread"
pw_thread_THREAD_CREATION_BACKEND = "$dir_pw_thread_freertos:creation"
pw_thread_YIELD_BACKEND = "$dir_pw_thread_freertos:yield"

#pw_thread_THREAD_ITERATION_BACKEND = "$dir_pw_thread_freertos:thread_iteration"

pw_interrupt_CONTEXT_BACKEND = "$dir_pw_interrupt_freertos:context"

#================================================================================
#================================================================================

# Override the executable type and the test main's target.
pw_unit_test_EXECUTABLE_TARGET_TYPE = "silabs_executable"
pw_unit_test_EXECUTABLE_TARGET_TYPE_FILE =
    "${silabs_sdk_build_root}/silabs_executable.gni"
pw_unit_test_MAIN = "//:efr32_test_main"

# Additional variables needed by silabs_executable that must be passed in to pw_test.
test_executable_output_name = "matter-silabs-device_tests-"
test_executable_output_name_suffix = ".out"
